$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: Infinity Engine Weidu dialog
scopeName: source.d.weidu

patterns:
- include: '#condition'
- include: '#action'
- include: '#comments'
- include: '#d-action'
- include: '#action-when'
- include: '#chain-epilogue'
- include: '#state'
- include: '#transition'
- include: '#transfeature'
- include: '#transnext'
- include: '#reference'
- include: '#numbers'
- include: '#strings'


repository:
  comments:
    patterns:
    - match: (//).*
      name: comment.line.d.weidu
    - begin: /\*
      end: \*/
      name: comment.block.d.weidu

  numbers:
    patterns:
    - match: \b(([0-9]+)|(0x[0-9a-fA-F]+))\b
      name: "constant.numeric.d.weidu"

  d-action:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(BEGIN)\b
    - match: \b(APPEND)\b
    - match: \b(APPEND_EARLY)\b
    - match: \b(CHAIN)\b
    - match: \b(INTERJECT)\b
    - match: \b(INTERJECT_COPY_TRANS)\b
    - match: \b(INTERJECT_COPY_TRANS2)\b
    - match: \b(INTERJECT_COPY_TRANS3)\b
    - match: \b(INTERJECT_COPY_TRANS4)\b
    - match: \b(EXTEND_TOP)\b
    - match: \b(EXTEND_BOTTOM)\b
    - match: \b(ADD_STATE_TRIGGER)\b
    - match: \b(ADD_TRANS_TRIGGER)\b
    - match: \b(ADD_TRANS_ACTION)\b
    - match: \b(REPLACE_TRANS_ACTION)\b
    - match: \b(REPLACE_TRANS_TRIGGER)\b
    - match: \b(ALTER_TRANS)\b
    - match: \b(REPLACE)\b
    - match: \b(SET_WEIGHT)\b
    - match: \b(REPLACE_SAY)\b
    - match: \b(REPLACE_STATE_TRIGGER)\b
    - match: \b(REPLACE_TRIGGER_TEXT)\b
    - match: \b(REPLACE_TRIGGER_TEXT_REGEXP)\b
    - match: \b(REPLACE_ACTION_TEXT)\b
    - match: \b(REPLACE_ACTION_TEXT_REGEXP)\b
    - match: \b(REPLACE_ACTION_TEXT_PROCESS)\b
    - match: \b(R_A_T_P_R)\b

  action-when:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(IF)\b
    - match: \b(UNLESS)\b
  
  chain-epilogue:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(END)\b
    - match: \b(EXTERN)\b
    - match: \b(SAFE)\b
    - match: \b(EXIT)\b

  state:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(APPENDI)\b
    - match: \b(CHAIN2)\b
    - match: \b(SAY)\b

  transition:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(COPY_TRANS)\b
    - match: \b(COPY_TRANS_LATE)\b

  transfeature:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(REPLY)\b
    - match: \b(DO)\b
    - match: \b(JOURNAL)\b
    - match: \b(SOLVED_JOURNAL)\b
    - match: \b(UNSOLVED_JOURNAL)\b
    - match: \b(FLAGS)\b

  transnext:
    name: keyword.other.d.weidu
    patterns:
    - match: \b(EXTERN)\b
    - match: \b(GOTO)\b

  reference:
    name: variable.parameter.tra.weidu
    patterns:
    - match: \s(@)([0-9]+)\s
    - match: \s(#)([0-9]+)\s
    - match: \s(\( AT "(\w+)"\))\s

  condition:
    name: meta.weidu.script.condition
    begin: '\b(IF)\b\s+(~)'
    beginCaptures:
      "1":
        name: keyword.other.d.weidu
      "2":
        name: string.quoted.tilde.weidu
    end: '(~)'
    endCaptures:
      "1":
        name: string.quoted.tilde.weidu
    patterns:
      - include: source.baf.weidu#condition-body

  action:
    name: meta.weidu.script.action
    begin: '\b(DO)\b\s+(~)'
    beginCaptures:
      "1":
        name: keyword.other.d.weidu
      "2":
        name: string.quoted.tilde.weidu
    end: '(~)'
    endCaptures:
      "1":
        name: string.quoted.tilde.weidu
    patterns:
      - include: source.baf.weidu#action-body

  strings:
    patterns:
    - name: string.quoted.tilde.weidu
      begin: '~'
      end: '~'
      patterns:
      - include: '#vars'

  vars:
    name: variable.parameter.weidu-d
    patterns:
    - match: '(%[^%]+%)'
